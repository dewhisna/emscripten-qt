Emscripten-Qt Clipboard Support
-------------------------------

Emscripten-Qt has two functions to support de-sandboxing of the clipboard:

    int EMSCRIPTENQT_clipboardTextChanged(const char *pText);
    int EMSCRIPTENQT_setClipboardText(const char *pText);

EMSCRIPTENQT_clipboardTextChanged : is called by the Qt Clipboard whenever the clipboard
text has changed.  It's mapped to _EMSCRIPTENQT_clipboardTextChanged_internal in the
Javascript code and a stub for it can be found in pre-qt.js.  Implement this to create a
mechanism for getting the Qt Application clipboard out of the Javascript sandbox.

EMSCRIPTENQT_setClipboardText : is an implemented C/C++ function within the Emscripten-Qt
code.  Call this function from the Javascript code (using the decorated name of
_EMSCRIPTENQT_setClipboardText) to set the text of the Qt Application clipboard.  This can
be called in any fashion necessary to get text inside the Javascript sandbox.


A functional implementation of a Clipboard handler can be found in pre-qt-clipboard.js,
which can be included with your build in place of pre-qt.js.  This implementation uses
jQuery.js, jQuery.zclip.js, and the ZeroClipboard.swf flash module to copy the clipboard
content in/out of the Javascript sandbox.

Included in the emscripten-stuff/zclip folder can be found the version of jQuery.js,
jQuery.zclip.js, and ZeroClipboard.swf that were used and tested during the creation of
pre-qt-clipboard.js.  These can be found from their source websites at:

http://jquery.com/
http://steamdev.com/zclip/

This is based on ZeroClipboard from http://zeroclipboard.org/, but I was unable, at the
time of development, to get the flash module and scripts from that site to function.

Another possible solution is Clippy:  https://github.com/mojombo/clippy
It works too, but didn't have the look-and-feel I was after.  But that all depends on your
target application and how you wish to implement it.

In any case, to use the included pre-qt-clipboard.js with zclip, you will need to edit the
.html file generated by emscripten and add the following prior to the include of your
compiled Emscripten-Qt Javascript:

    <script type="text/javascript" src="jquery-2.1.0.min.js"></script>
    <script type="text/javascript" src="jquery.zclip.min.js"></script>

And of course copy these two scripts along with the flash module to the webserver.  You
might also be able get Emscripten to include these two scripts into your main compiled
Javascript rather than editing/adding them to the .html file.

On some browser/OS combinations, it might only load the flash module if running on an
actual web server, and not when loading from a direct file:// URL.  I found this to be
the case with Firefox on Linux during development.

Another issue I found is that the ZeroClipboard flash module tends to not correctly
position itself within the target page if the start-up script logic does something that
changes its layout.  This generally happens with the status line at the top of the page
that's generated and driven by the generated Javascript.

I tried solving this with numerous event handlers and document load state callbacks, but
didn't have much luck on finding a workable solution that was acceptible on all computers
and browsers.  So, I punted and went with modifying the generated .html file, since I
was modifying it anyway to add the two script include, and changed the status line text
update code to not allow the text vertical height to change, by printing a non-breaking
space (&nbsp;) when the status text string was empty.  Not the best solution, but it works.

If you don't need clipboard support, you should be able to use the basic pre-qt.js file
as-is.


